{"version":3,"file":"main.77e73d79fbbad4f026ca.bundle.js","sources":["webpack:///../fabreactor-faker/src/DataRepository.ts"],"sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar fabreactor_1 = require(\"fabreactor\");\r\nvar faker = require(\"faker\");\r\nvar FabreactorDataRepository = /** @class */ (function () {\r\n    function FabreactorDataRepository(itemCount) {\r\n        var _this = this;\r\n        this.itemCount = itemCount;\r\n        this.items = [];\r\n        this.fields = [{\r\n                name: \"Id\",\r\n                key: \"id\",\r\n                readOnly: true,\r\n                group: \"Group 1\",\r\n                type: fabreactor_1.FabreactorFieldType.text\r\n            }, {\r\n                name: \"Name\",\r\n                key: \"name\",\r\n                required: true,\r\n                group: \"Group 1\",\r\n                type: fabreactor_1.FabreactorFieldType.text\r\n            }, {\r\n                name: \"Job Title\",\r\n                key: \"jobTitle\",\r\n                group: \"Group 2\",\r\n                type: fabreactor_1.FabreactorFieldType.text\r\n            }, {\r\n                name: \"Job Type\",\r\n                key: \"jobType\",\r\n                group: \"Group 2\",\r\n                type: fabreactor_1.FabreactorFieldType.text\r\n            }, {\r\n                name: \"Color\",\r\n                key: \"color\",\r\n                group: \"Group 2\",\r\n                type: fabreactor_1.FabreactorFieldType.color\r\n            }, {\r\n                name: \"Created\",\r\n                key: \"created\",\r\n                readOnly: true,\r\n                type: fabreactor_1.FabreactorFieldType.dateTime\r\n            }, {\r\n                name: \"Modified\",\r\n                key: \"modified\",\r\n                readOnly: true,\r\n                type: fabreactor_1.FabreactorFieldType.dateTime\r\n            }\r\n        ];\r\n        this.groupBy = function (xs, key) {\r\n            return xs.reduce(function (rv, x) {\r\n                (rv[x[key]] = rv[x[key]] || []).push(x);\r\n                return rv;\r\n            }, {});\r\n        };\r\n        this.randomItem = function () {\r\n            return {\r\n                id: faker.random.uuid(),\r\n                name: faker.name.findName(),\r\n                jobTitle: faker.name.jobTitle(),\r\n                jobType: faker.name.jobType(),\r\n                color: faker.internet.color(),\r\n                created: new Date(),\r\n                modified: faker.date.recent(),\r\n            };\r\n        };\r\n        this.newItem = function () {\r\n            var now = new Date();\r\n            return {\r\n                id: faker.random.uuid(),\r\n                color: faker.internet.color(),\r\n                jobType: faker.name.jobType(),\r\n                created: now,\r\n                modified: now,\r\n            };\r\n        };\r\n        this.addItem = function (item) {\r\n            _this.items.push(item);\r\n            return item;\r\n        };\r\n        this.initData();\r\n    }\r\n    Object.defineProperty(FabreactorDataRepository.prototype, \"newItemFields\", {\r\n        get: function () {\r\n            var grouped = this.groupBy(this.fields.filter(function (t) { return t.group && !t.readOnly; }), \"group\");\r\n            return Object.keys(grouped).map(function (t) {\r\n                return {\r\n                    name: t,\r\n                    fields: grouped[t]\r\n                };\r\n            });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FabreactorDataRepository.prototype.initData = function () {\r\n        for (var i = 0; i < this.itemCount; i++) {\r\n            this.items.push(this.randomItem());\r\n        }\r\n    };\r\n    return FabreactorDataRepository;\r\n}());\r\nexports.default = FabreactorDataRepository;\r\nvar FabreactorFieldExtension = /** @class */ (function (_super) {\r\n    __extends(FabreactorFieldExtension, _super);\r\n    function FabreactorFieldExtension() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return FabreactorFieldExtension;\r\n}(fabreactor_1.FabreactorField));\r\n"],"mappings":"AACA","sourceRoot":""}